{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["About","props","console","log","className","Movie","id","year","title","summary","poster","genres","to","pathname","state","src","alt","map","genre","index","key","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","Detail","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAgBeA,MAbf,SAAeC,GAEX,OADAC,QAAQC,IAAIF,GAEZ,yBAAKG,UAAU,oBACb,8IAIA,8D,gFCqCSC,MA3Cf,YAA8D,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC/C,OACI,kBAAC,IAAD,CACIC,GAAI,CACAC,SAAS,UAAD,OAAYP,GACpBQ,MAAQ,CACJP,OACAC,QACAC,UACAC,SACAC,YAIR,yBAAKP,UAAU,SACX,yBAAKA,UAAU,eAAeW,IAAKL,EAAQM,IAAKR,IAChD,yBAAKJ,UAAU,eACX,wBAAIA,UAAU,gBAAgBI,GAC9B,wBAAIJ,UAAU,eAAd,IAA8BG,EAA9B,KACA,wBAAIH,UAAU,WACd,wBAAIA,UAAU,iBACRO,EAAOM,KAAK,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKD,EAAOf,UAAU,iBACrBc,OAIb,uBAAGd,UAAU,kBAAkBK,EAAQY,MAAM,EAAE,KAA/C,WC6DLC,G,kNAvDbR,MAAQ,CACNS,WAAY,EACZC,OAAS,I,EAKXC,U,sBAAY,8BAAAC,EAAA,sEAGkCC,IAAMC,IAAI,yDAH5C,gBAGeJ,EAHf,EAGFK,KAAQA,KAASL,OACzB,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAJzB,2C,kEAQVQ,KAAKN,c,+BAQE,MAEuBM,KAAKjB,MAA3BS,EAFD,EAECA,UAAWC,EAFZ,EAEYA,OACnB,OACE,6BAASpB,UAAU,aACfmB,EACA,yBAAKnB,UAAU,UACb,0BAAMA,UAAU,gBAAhB,iBAKA,yBAAKA,UAAU,UACXoB,EAAOP,KAAI,SAAAe,GAAK,OAChB,kBAAC,EAAD,CACEZ,IAAKY,EAAM1B,GACXA,GAAI0B,EAAM1B,GACVC,KAAMyB,EAAMzB,KACZC,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfC,OAAQsB,EAAMC,mBACdtB,OAAQqB,EAAMrB,kB,GA7CbuB,IAAMC,YCTVC,E,kLArBU,IAAD,EACcL,KAAK9B,MAA3BoC,EADQ,EACRA,SAAUC,EADF,EACEA,aACIC,IAAnBF,EAASvB,OACRwB,EAAQE,KAAK,O,+BAIX,IACEH,EAAaN,KAAK9B,MAAlBoC,SAGR,OAAGA,EAASvB,MAEJ,8BAAOuB,EAASvB,MAAMN,OAGnB,S,GAnBE0B,IAAMC,W,MCSZM,MATf,WACE,OACE,yBAAKrC,UAAU,OACb,kBAAC,IAAD,CAAMQ,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,W,MCeS8B,MAZf,WAEE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWvB,IACxC,kBAAC,IAAD,CAAOqB,KAAK,SAASE,UAAW7C,IAChC,kBAAC,IAAD,CAAO2C,KAAK,aAAaE,UAAWT,MCd1CU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.1218a574.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nfunction About(props) {\r\n    console.log(props);\r\n    return (\r\n    <div className=\"about__container\">\r\n      <span>\r\n        “Freedom is the freedom to say that two plus two make four. If that is\r\n        granted, all else follows.”\r\n      </span>\r\n      <span>− George Orwell, 1984</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Movie.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Movie({ id, year, title, summary, poster, genres }) {\r\n    return (\r\n        <Link \r\n            to={{\r\n                pathname: `/movie/${id}`,\r\n                state : {\r\n                    year,\r\n                    title,\r\n                    summary,\r\n                    poster,\r\n                    genres\r\n                }\r\n            }}\r\n        >\r\n            <div className=\"movie\">\r\n                <img className=\"movie__image\" src={poster} alt={title}></img>\r\n                <div className=\"movie__data\">\r\n                    <h3 className=\"movie__title\">{title}</h3>\r\n                    <h5 className=\"movie__year\">({year})</h5>\r\n                    <ul className=\"genres\"></ul>\r\n                    <ul className=\"movie__genres\">\r\n                        { genres.map( (genre, index) => (\r\n                            <li key={index} className=\"genres__genre\">\r\n                                {genre}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <p className=\"movie__summary\">{summary.slice(0,140)}...</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id : PropTypes.number.isRequired,\r\n    year : PropTypes.number.isRequired,\r\n    title : PropTypes.string.isRequired,\r\n    summary : PropTypes.string.isRequired,\r\n    poster : PropTypes.string.isRequired,\r\n    genres : PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Movie from '../components/Movie';\r\nimport './Home.css';\r\n\r\n// import propTypes from 'prop-types';\r\n\r\n/*\r\n  // props 의 type 과 required 를 체크한다 (무조건 propTypes 로 다른 이름 불가능)\r\n  Food.propTypes = {\r\n    name: propTypes.string.isRequired,\r\n    image: propTypes.string.isRequired,\r\n    rating: propTypes.number.isRequired\r\n  }\r\n\r\n  // Mounting - 새로 생기는 것\r\n  // Updating\r\n\r\n  // Unmounting\r\n\r\n\r\n  // component 가 마운트 된 후 발생\r\n  componentDidMount() {\r\n    console.log(1);\r\n  }\r\n\r\n  // component 가 업데이트 된 후 발생\r\n  componentDidUpdate() {\r\n    console.log(3);\r\n  }\r\n\r\n  // component 가 떠날 때(다른페이지로 이동 할 때) 발생\r\n  componentWillUnmount() {\r\n    console.log(4);\r\n  }\r\n*/\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading : true,\r\n    movies : []\r\n  };\r\n\r\n  // async, await : 비동기\r\n  // 접근이 완료 될 때 까지 기다려준다.\r\n  getMovies = async () => {\r\n    // 일반적으로 javascript에서 data를 fetch 하는데, fetch를 사용한다\r\n    // axios는 fetch 위에 있는 작은 layer 정도로 생각 (더 편하다)\r\n    const { data: { data : { movies }}} = await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=rating\");\r\n    this.setState({ movies, isLoading: false});\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.getMovies();\r\n  /*\r\n    setTimeout(() => {\r\n      this.setState({ isLoading : false });\r\n    }, 5000)\r\n  */    \r\n  }\r\n  \r\n  render() {\r\n    // 이렇게 사용하면, this.state 생략 가능\r\n    const { isLoading, movies } = this.state;\r\n    return (\r\n      <section className=\"container\">\r\n        { isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader__text\">\r\n              \"Loading...\"\r\n            </span>\r\n          </div> \r\n          ) : (\r\n            <div className=\"movies\">\r\n              { movies.map(movie => (\r\n                <Movie\r\n                  key={movie.id} \r\n                  id={movie.id} \r\n                  year={movie.year} \r\n                  title={movie.title} \r\n                  summary={movie.summary} \r\n                  poster={movie.medium_cover_image} \r\n                  genres={movie.genres}\r\n                />\r\n              ))}\r\n            </div>\r\n          )\r\n        }\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Detail extends React.Component {\r\n\r\n    // 이런식으로 처리를 하면, 클릭을 하지 않고 url로 이동하는 것을 방지가능\r\n    componentDidMount() {\r\n        const { location, history } = this.props;\r\n        if(location.state === undefined) {\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { location } = this.props;\r\n        // render 가 일어나고 componentDidMount 가 발생하기 때문에\r\n        // 조건문으로 확인을 해주어야 에러가 안난다\r\n        if(location.state) {\r\n            return (\r\n                <span>{location.state.title}</span>\r\n            );\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n}\r\n\r\nexport default Detail;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <div className=\"nav\">\r\n      <Link to=\"/\">Home</Link>\r\n      <Link to=\"/about\">About</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport About from './routes/About';\nimport Home from './routes/Home';\nimport Detail from './routes/Detail';\nimport Navigation from './components/Navigation';\nimport './App.css';\n\n// router 은 url을 가져가서 component를 불러온다\n// url을 비교해서 가지고 온다, /home 과 /home/introduce 라는 라우터가 있다면\n// 두개의 라우터를 모두 랜더링 한다.\nfunction App() {\n  // Link 를 사용하고 있을때는, <HashRouter> 안에 넣어주어야 한다.\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie/:id\" component={Detail} />\n    </HashRouter>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}