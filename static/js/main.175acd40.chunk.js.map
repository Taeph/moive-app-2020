{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTAkCeA,MA9Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC3C,OACI,yBAAKC,UAAU,SACX,yBAAKA,UAAU,eAAeC,IAAKH,EAAQI,IAAKN,IAChD,yBAAKI,UAAU,eACX,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAd,IAA8BL,EAA9B,KACA,wBAAIK,UAAU,WACd,wBAAIA,UAAU,iBACRD,EAAOI,KAAK,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKD,EAAOL,UAAU,iBACrBI,OAIb,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAE,KAA/C,UC0EDC,G,kNAvDbC,MAAQ,CACNC,WAAY,EACZC,OAAS,I,EAKXC,U,sBAAY,8BAAAC,EAAA,sEAGkCC,IAAMC,IAAI,yDAH5C,gBAGeJ,EAHf,EAGFK,KAAQA,KAASL,OACzB,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAJzB,2C,kEAQVQ,KAAKN,c,+BAQE,MAEuBM,KAAKT,MAA3BC,EAFD,EAECA,UAAWC,EAFZ,EAEYA,OACnB,OACE,6BAASX,UAAU,aACfU,EACA,yBAAKV,UAAU,UACb,0BAAMA,UAAU,gBAAhB,iBAKA,yBAAKA,UAAU,UACXW,EAAOR,KAAI,SAAAgB,GAAK,OAChB,kBAAC,EAAD,CACEb,IAAKa,EAAMC,GACXA,GAAID,EAAMC,GACVzB,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAME,mBACdtB,OAAQoB,EAAMpB,kB,GA7CduB,cCjClBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.175acd40.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Movie.css';\r\n\r\nfunction Movie({ year, title, summary, poster, genres }) {\r\n    return (\r\n        <div className=\"movie\">\r\n            <img className=\"movie__image\" src={poster} alt={title}></img>\r\n            <div className=\"movie__data\">\r\n                <h3 className=\"movie__title\">{title}</h3>\r\n                <h5 className=\"movie__year\">({year})</h5>\r\n                <ul className=\"genres\"></ul>\r\n                <ul className=\"movie__genres\">\r\n                    { genres.map( (genre, index) => (\r\n                        <li key={index} className=\"genres__genre\">\r\n                            {genre}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <p className=\"movie__summary\">{summary.slice(0,140)}...</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id : PropTypes.number.isRequired,\r\n    year : PropTypes.number.isRequired,\r\n    title : PropTypes.string.isRequired,\r\n    summary : PropTypes.string.isRequired,\r\n    poster : PropTypes.string.isRequired,\r\n    genres : PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Movie from './Movie.js';\nimport './App.css';\n\n// import propTypes from 'prop-types';\n\n/*\n  // props 의 type 과 required 를 체크한다 (무조건 propTypes 로 다른 이름 불가능)\n  Food.propTypes = {\n    name: propTypes.string.isRequired,\n    image: propTypes.string.isRequired,\n    rating: propTypes.number.isRequired\n  }\n\n  // Mounting - 새로 생기는 것\n  // Updating\n\n  // Unmounting\n\n\n  // component 가 마운트 된 후 발생\n  componentDidMount() {\n    console.log(1);\n  }\n\n  // component 가 업데이트 된 후 발생\n  componentDidUpdate() {\n    console.log(3);\n  }\n\n  // component 가 떠날 때(다른페이지로 이동 할 때) 발생\n  componentWillUnmount() {\n    console.log(4);\n  }\n*/\n\nclass App extends Component {\n  state = {\n    isLoading : true,\n    movies : []\n  };\n\n  // async, await : 비동기\n  // 접근이 완료 될 때 까지 기다려준다.\n  getMovies = async () => {\n    // 일반적으로 javascript에서 data를 fetch 하는데, fetch를 사용한다\n    // axios는 fetch 위에 있는 작은 layer 정도로 생각 (더 편하다)\n    const { data: { data : { movies }}} = await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=rating\");\n    this.setState({ movies, isLoading: false});\n  }\n  \n  componentDidMount() {\n    this.getMovies();\n  /*\n    setTimeout(() => {\n      this.setState({ isLoading : false });\n    }, 5000)\n  */    \n  }\n  \n  render() {\n    // 이렇게 사용하면, this.state 생략 가능\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        { isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">\n              \"Loading...\"\n            </span>\n          </div> \n          ) : (\n            <div className=\"movies\">\n              { movies.map(movie => (\n                <Movie\n                  key={movie.id} \n                  id={movie.id} \n                  year={movie.year} \n                  title={movie.title} \n                  summary={movie.summary} \n                  poster={movie.medium_cover_image} \n                  genres={movie.genres}\n                />\n              ))}\n            </div>\n          )\n        }\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}